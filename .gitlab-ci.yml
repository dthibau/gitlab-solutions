variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - Build
  - Test
  - Integration
  
build:
  stage: Build
  script:
    - 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/'
    - './mvnw $MAVEN_OPTS package'
  artifacts:
    paths:
      - application/target/*.jar

integration-test:
  stage: Test
  script:
    - 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/'
    - './mvnw integration-test'
    
analysis:
  stage: Test
  script:
    - 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/'
    - './mvnw verify sonar:sonar'
    
deploy_integration:
  stage: Integration
  script:
    - 'echo DEPLOY INTEGRATION'
    - 'cp application/target/*.jar /home/dthibau/Formations/GitLab/MyWork/Serveurs/app.jar'
  dependencies:
    - build
    
